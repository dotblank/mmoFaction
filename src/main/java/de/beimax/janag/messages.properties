Namegen0=Generate|Generieren
Namegen1=Java Name Generator
Clear=Clear\!|Leeren\!
Label.Patterns=Patterns:|Muster:
Label.Genders=Type:|Typ:
Namegenerator.langs=de
Namegenerator.CountLessThanOne=Error: Count smaller than 1\!|Fehler: Count kleiner 1\!
Namegenerator.ErrorGeneric=[Error]|[Fehler]
Namegenerator.FileDoesNotExist=File does not exist|Datei existiert nicht
Namegenerator.LanguageFileSyntaxError=Entry before Group: |Laut kommt vor Lautbestimmungsgruppe: 
Namegenerator.NoGenderFound=Error: No Gender found: |Fehler: Kein Geschlecht gefunden: 
Namegenerator.NoGenderSelected=No Gender selected|Kein Geschlecht gew\u00E4hlt
Namegenerator.NoPatternFound=Error: No Pattern found: |Fehler: Keine Schablone gefunden: 
Namegenerator.SemanticsFileSyntaxError=Entry before Group: |Namenseintrag kommt vor Sprachschablone: 
Namegenerator.WrongNameStart=Line (|Zeile (
Namegenerator.WrongNameEnd=): Name entry error: wrong number of parameters|): Namenseintrag fehlerhaft: Falsche Anzahl Argumente
CMLModeHint=Entering interactive mode - for command line mode, try "java -jar JaNaG_CML.jar help"!\n|Interaktiver Modus. F\u00FCr Kommandozeilenmodus: "java -jar JaNaG_CML.jar help" eingeben!\n
CMLHelp=Name Generator - Generate random names!\n\nCommand line options:\n\njava NamegenCML g PATTERN GENDER [Number]\nGenerates number (or 1) names from PATTERN and GENDER\n\njava NamegenCML c PATTERN GENDER NUMBER HOST [PORT]\nClient mode connect to NamegenServer using HOST and PORT (default: 12022).\n\njava NamegenCML s [search string]\nList all patterns and their genders, with optional search string to find only certain patterns.\n\nYou can also select your own semantics and language file by inserting files=languages.txt,semantics.txt BEFORE g or s.\n\nExample: java Namegen files=mylang.txt,mysem.txt g Patt1 Male 5\n...would generate 5 male names from pattern Patt1 found in mylang.txt and mysem.txt.\n\nIf the command name is followed by a language acronym (like de), then the program tries to generate output in this language.|Name Generator - Generiere Zufallsnamen!\n\nOptionen f\u00FCr die Kommandozeile:\n\njava NamegenCML g SCHABLONE GESCHLECHT [Anzahl]\nGeneriere Anzahl (or 1) Namen von SCHABLONE und GESCHLECHT\n\njava NamegenCML c PATTERN GENDER NUMBER HOST [PORT]\nClient-Modus: Verbinde mit NamegenServer auf HOST und PORT (Voreinstellung: 12022).\n\njava NamegenCML s [Suche]\nListe alle Schablonen und Geschlechter auf; Suche erlaubt Eingrenzung der Treffer bei Schablonen.\n\nMan kann auch seine eigene Semantik- und Sprachdatei vorgeben, indem man vor g oder s einschiebt: files=languages.txt,semantics.txt.\n\Bsp: java Namegen files=mylang.txt,mysem.txt g Patt1 Male 5\n...w\u00FCrde 5 m\u00E4nnliche Namen aus der Schablone Patt1 generieren und diese Daten aus mylang.txt und mysem.txt holen.\n\nKommt direkt hinter dem Kommando eine Sprachangabe, z.B. de, dann wird versucht, die Ausgabe in dieser Sprache zu geben.
CMLSelectPattern=\nSelect Pattern (0 to quit):|\nSchablone ausw\u00E4hlen (0 f\u00FCr Ende):
CMLSelectGender=\nSelect Gender (0 to quit):|\nGeschlecht oder Bereich ausw\u00E4hlen (0 f\u00FCr Ende):
CMLSelectNumberOfNames=\nSelect number of names to generate (0 to quit):|\nAnzahl der Namen (0 f\u00FCr Ende):
CMLCorrectNumber=\nPlease, enter correct number!|\nBitte korrekte Zahl eingeben!
CMLHits=Results:\n|Ergebnisse:\n
CMLCouldNotConnect=Could not connect to server\!|Konnte keine Verbindung zum Server aufbauen\!
MyUtils.InputError=Input Error\!|Fehler bei der Eingabe\!
MyUtils.IOError=I/O-Error\!|Eingabe/Ausgabefehler\!
MyUtils.NoFloat=Not a valid floating point number\!|Keine Flie\u00DFkomma-Zahl\!
MyUtils.NoInteger=Not a valid integer\!|Keine Integer-Zahl\!
